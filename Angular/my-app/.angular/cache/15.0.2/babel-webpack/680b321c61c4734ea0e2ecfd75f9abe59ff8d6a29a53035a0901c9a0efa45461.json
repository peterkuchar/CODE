{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output } from '@angular/core';\nlet BodyComponent = class BodyComponent {\n  constructor() {\n    this.tasks = [];\n    this.inputTask = \"\";\n    this.tasks = [{\n      content: 'First',\n      date: '24/12/2022',\n      time: '08:00 AM',\n      completed: false\n    }, {\n      content: 'second',\n      date: '24/12/2022',\n      time: '08:00 AM',\n      completed: false\n    }, {\n      content: 'third',\n      date: '24/12/2022',\n      time: '08:00 AM',\n      completed: false\n    }, {\n      content: 'fourth',\n      date: '24/12/2022',\n      time: '08:00 AM',\n      completed: false\n    }];\n  }\n  ngOnInit() {}\n  toggleDone(id) {\n    this.tasks.map((v, i) => {\n      if (i == id) v.completed = !v.completed; // mark completed task with line-through style\n      return v;\n    });\n  }\n  deleteTask(id) {\n    this.tasks = this.tasks.filter((v, i) => i !== id); // delete task\n  }\n\n  addNewTask() {\n    this.tasks.push({\n      content: this.inputTask,\n      date: this.inputDate,\n      time: this.inputTime,\n      completed: false\n    });\n    console.log(this.tasks);\n    this.inputTask = \"\"; // reset input text\n    this.inputDate = \"\"; // reset input date\n    this.inputTime = \"\"; // reset input time\n  }\n};\n\n__decorate([Output()], BodyComponent.prototype, \"inputDate\", void 0);\n__decorate([Output()], BodyComponent.prototype, \"inputTime\", void 0);\n__decorate([Output()], BodyComponent.prototype, \"inputTask\", void 0);\nBodyComponent = __decorate([Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], BodyComponent);\nexport { BodyComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAASC,MAAM,QAAgB,eAAe;AAUzD,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAOxBC;IALA,UAAK,GAAU,EAAE;IAGA,cAAS,GAAW,EAAE;IAGrC,IAAI,CAACC,KAAK,GAAG,CACX;MACEC,OAAO,EAAE,OAAO;MAChBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,UAAU;MAChBC,SAAS,EAAE;KACZ,EACD;MACEH,OAAO,EAAE,QAAQ;MACjBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,UAAU;MAChBC,SAAS,EAAE;KACZ,EACD;MACEH,OAAO,EAAE,OAAO;MAChBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,UAAU;MAChBC,SAAS,EAAE;KACZ,EACD;MACEH,OAAO,EAAE,QAAQ;MACjBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,UAAU;MAChBC,SAAS,EAAE;KACZ,CACF;EACH;EAEAC,QAAQ,IAER;EAEAC,UAAU,CAACC,EAAU;IACnB,IAAI,CAACP,KAAK,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;MACtB,IAAIA,CAAC,IAAIH,EAAE,EAAEE,CAAC,CAACL,SAAS,GAAG,CAACK,CAAC,CAACL,SAAS,CAAC,CAAE;MAC1C,OAAOK,CAAC;IACV,CAAC,CAAC;EACJ;EAEAE,UAAU,CAACJ,EAAU;IACnB,IAAI,CAACP,KAAK,GAAG,IAAI,CAACA,KAAK,CAACY,MAAM,CAAC,CAACH,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,EAAE,CAAC,CAAC,CAAC;EACtD;;EAEAM,UAAU;IACR,IAAI,CAACb,KAAK,CAACc,IAAI,CAAC;MACdb,OAAO,EAAE,IAAI,CAACc,SAAS;MACvBb,IAAI,EAAE,IAAI,CAACc,SAAS;MACpBb,IAAI,EAAE,IAAI,CAACc,SAAS;MACpBb,SAAS,EAAE;KACZ,CAAC;IAEFc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,KAAK,CAAC;IAEvB,IAAI,CAACe,SAAS,GAAG,EAAE,CAAC,CAAE;IACtB,IAAI,CAACC,SAAS,GAAG,EAAE,CAAC,CAAC;IACrB,IAAI,CAACC,SAAS,GAAG,EAAE,CAAC,CAAC;EACvB;CACD;;AA9DWG,YAATvB,MAAM,EAAE,gDAAuB;AACtBuB,YAATvB,MAAM,EAAE,gDAAuB;AACtBuB,YAATvB,MAAM,EAAE,gDAA+B;AAL7BC,aAAa,eAPzBF,SAAS,CAAC;EACTyB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB,CAAC;EACnCC,eAAe,EAAEC,uBAAuB,CAACC;CAC1C,CAAC,GAEW5B,aAAa,CAiEzB;SAjEYA,aAAa","names":["Component","Output","BodyComponent","constructor","tasks","content","date","time","completed","ngOnInit","toggleDone","id","map","v","i","deleteTask","filter","addNewTask","push","inputTask","inputDate","inputTime","console","log","__decorate","selector","templateUrl","styleUrls","changeDetection","ChangeDetectionStrategy","OnPush"],"sourceRoot":"","sources":["C:\\Users\\peter\\Desktop\\CODE\\Angular\\my-app\\src\\app\\components\\body\\body.component.ts"],"sourcesContent":["import { Component, Input, Output, OnInit } from '@angular/core';\nimport { Task } from '../../models/Task';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class BodyComponent implements OnInit {\n\n  tasks:Task[] = [];\n  @Output() public inputDate: any;\n  @Output() public inputTime: any;\n  @Output() public inputTask: string = \"\";\n\n  constructor() {\n    this.tasks = [\n      {\n        content: 'First',\n        date: '24/12/2022',\n        time: '08:00 AM',\n        completed: false\n      },\n      {\n        content: 'second',\n        date: '24/12/2022',\n        time: '08:00 AM',\n        completed: false\n      },\n      {\n        content: 'third',\n        date: '24/12/2022',\n        time: '08:00 AM',\n        completed: false\n      },\n      {\n        content: 'fourth',\n        date: '24/12/2022',\n        time: '08:00 AM',\n        completed: false\n      }\n    ]\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  toggleDone(id: number) {\n    this.tasks.map((v, i) => {\n      if (i == id) v.completed = !v.completed;  // mark completed task with line-through style\n      return v;\n    })\n  }\n\n  deleteTask(id: number) {\n    this.tasks = this.tasks.filter((v, i) => i !== id); // delete task\n  }\n\n  addNewTask() {\n    this.tasks.push({\n      content: this.inputTask,\n      date: this.inputDate,\n      time: this.inputTime,\n      completed: false\n    });\n\n    console.log(this.tasks);\n\n    this.inputTask = \"\";  // reset input text\n    this.inputDate = \"\"; // reset input date\n    this.inputTime = \"\"; // reset input time\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}