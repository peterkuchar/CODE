{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction BodyComponent_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 2)(1, \"tr\")(2, \"td\")(3, \"div\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 4);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"div\", 5);\n    i0.ɵɵtext(10, \"24/12/2022\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"td\")(12, \"div\", 6);\n    i0.ɵɵtext(13, \"08:00\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 7);\n    i0.ɵɵtext(16, \"X\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.content);\n  }\n}\nexport class BodyComponent {\n  constructor() {}\n  ngOnInit() {\n    this.tasks = [{\n      content: 'first',\n      // date: Date,\n      // time: Time,\n      completed: false\n    }, {\n      content: 'second',\n      completed: true\n    }];\n  }\n  static #_ = this.ɵfac = function BodyComponent_Factory(t) {\n    return new (t || BodyComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BodyComponent,\n    selectors: [[\"app-body\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"id\", \"bodyOutput\"], [\"class\", \"task\", 4, \"ngFor\", \"ngForOf\"], [1, \"task\"], [1, \"id\"], [1, \"content\"], [1, \"date\"], [1, \"time\"], [1, \"delete\"]],\n    template: function BodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, BodyComponent_table_1_Template, 17, 2, \"table\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 44:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(8:9) C:\\\\\\\\Users\\\\\\\\peter\\\\\\\\Desktop\\\\\\\\CODE\\\\\\\\Angular\\\\\\\\my-app\\\\\\\\src\\\\\\\\app\\\\\\\\components\\\\\\\\body\\\\\\\\body.component.css Unknown word\\\\n\\\\n \\\\u001b[90m  6 | \\\\u001b[39m \\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m  7 | \\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m  8 | \\\\u001b[39m \\\\u001b[33m.task\\\\u001b[39m \\\\u001b[33m{\\\\u001b[39mwwwwwwwwwwwwwwww\\\\n \\\\u001b[90m    | \\\\u001b[39m        \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m  9 | \\\\u001b[39m\\\\n \\\\u001b[90m 10 | \\\\u001b[39m \\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n \\t\\n \\t//[_ngcontent-%COMP%]   startup[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n \\t__webpack_modules__[44]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=body.component.css.map*/\"]\n  });\n}","map":{"version":3,"mappings":";;;;IAEIA,gCAA+D;IAGnCA,YAAO;IAAAA,iBAAM;IAEjCA,0BAAI;IACqBA,YAAkB;IAAAA,iBAAM;IAEjDA,0BAAI;IACkBA,2BAAU;IAAAA,iBAAM;IAEtCA,2BAAI;IACkBA,sBAAK;IAAAA,iBAAM;IAEjCA,2BAAI;IACqBA,kBAAC;IAAAA,iBAAS;;;;;IAZfA,eAAO;IAAPA,0BAAO;IAGFA,eAAkB;IAAlBA,qCAAkB;;;ACEvD,OAAM,MAAOC,aAAa;EAKxBC,eAAgB;EAEhBC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,CACX;MACEC,OAAO,EAAE,OAAO;MAChB;MACA;MACAC,SAAS,EAAE;KACZ,EACD;MACED,OAAO,EAAE,QAAQ;MACjBC,SAAS,EAAE;KACZ,CACF;EACH;EAAC;qBApBUL,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAM;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDV1BX,8BAAqB;QAEjBA,mEAmBQ;QAEZA,iBAAM;;;QArBmCA,eAAU;QAAVA,mCAAU","names":["i0","BodyComponent","constructor","ngOnInit","tasks","content","completed","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\peter\\Desktop\\CODE\\Angular\\my-app\\src\\app\\components\\body\\body.component.html","C:\\Users\\peter\\Desktop\\CODE\\Angular\\my-app\\src\\app\\components\\body\\body.component.ts"],"sourcesContent":["<div id=\"bodyOutput\">\n\n    <table class=\"task\" *ngFor=\"let task of tasks; let i = index;\">\n        <tr>\n            <td>\n                <div class=\"id\">{{ i }}</div>\n            </td>\n            <td>\n                <div class=\"content\">{{ task.content }}</div>\n            </td>\n            <td>\n                <div class=\"date\">24/12/2022</div>\n            </td>\n            <td>\n                <div class=\"time\">08:00</div>\n            </td>\n            <td>\n              <button class=\"delete\">X</button>\n            </td>\n        </tr>\n\n    </table>\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../../models/Task';\nimport { Time } from \"@angular/common\";\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css']\n})\n\nexport class BodyComponent implements OnInit {\n\n  tasks!:Task[];\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.tasks = [\n      {\n        content: 'first',\n        // date: Date,\n        // time: Time,\n        completed: false\n      },\n      {\n        content: 'second',\n        completed: true\n      }\n    ]\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}