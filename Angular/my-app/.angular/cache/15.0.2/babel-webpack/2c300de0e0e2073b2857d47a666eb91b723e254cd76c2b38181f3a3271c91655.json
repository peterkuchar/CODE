{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class BodyComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.button = 'Add';\n    this.newTaskForm = this.formBuilder.group();\n    this.task = document.getElementById('inputText');\n  }\n  static #_ = this.ɵfac = function BodyComponent_Factory(t) {\n    return new (t || BodyComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BodyComponent,\n    selectors: [[\"app-body\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[\"id\", \"bodyInput\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"taskText\", \"id\", \"inputText\", \"type\", \"text\", \"value\", \"\", \"placeholder\", \"Add task here\"], [\"formControlName\", \"taskDate\", \"id\", \"inputDate\", \"type\", \"date\"], [\"formControlName\", \"taskTime\", \"id\", \"inputTime\", \"type\", \"time\", \"name\", \"\"], [\"id\", \"add\", \"onclick\", \"add()\", \"type\", \"submit\"], [\"id\", \"bodyOutput\"], [\"type\", \"submit\"]],\n    template: function BodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function BodyComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵelement(1, \"input\", 1)(2, \"input\", 2)(3, \"input\", 3);\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"table\")(8, \"td\");\n        i0.ɵɵtext(9, \" Appointment \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"td\");\n        i0.ɵɵtext(11, \" 11/12/2022 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"td\");\n        i0.ɵɵtext(13, \" 08:00 AM \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"td\")(15, \"button\", 6);\n        i0.ɵɵtext(16, \"X\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.newTaskForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.button);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"#bodyInput[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-top: 1rem;\\r\\n}\\r\\n\\r\\n#inputDate[_ngcontent-%COMP%] {\\r\\n    width: 40%;\\r\\n}\\r\\n\\r\\n#inputTime[_ngcontent-%COMP%] {\\r\\n    width: 40%;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%] {\\r\\n\\r\\n    width: 100%;\\r\\n    height: 3rem;\\r\\n    padding: 1.5rem 1rem;\\r\\n    font-size: 1.5rem;\\r\\n }\\r\\n\\r\\n #add[_ngcontent-%COMP%] {\\r\\n    height: 100%;\\r\\n    padding: .615rem 2rem;\\r\\n    font-size: 1.5rem;\\r\\n }\\r\\n\\r\\n #bodyOutput[_ngcontent-%COMP%] {\\r\\n    margin-top: 2rem;\\r\\n    font-size: 1.5rem;\\r\\n }\\r\\n\\r\\n #bodyOutput[_ngcontent-%COMP%]   table[_ngcontent-%COMP%] {\\r\\n    border-spacing: 3rem 0;\\r\\n }\\r\\n\\r\\n #bodyOutput[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\r\\n    background-color: red;\\r\\n    color: white;\\r\\n    padding: 5px;\\r\\n    border: 1px solid darkred;\\r\\n    border-radius: 5px;\\r\\n }\\r\\n\\r\\n #bodyOutput[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, #bodyOutput[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active {\\r\\n    background-color: darkred;\\r\\n }\\n/*# sourceURL=webpack://./src/app/components/body/body.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ib2R5L2JvZHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTs7SUFFSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLG9CQUFvQjtJQUNwQixpQkFBaUI7Q0FDcEI7O0NBRUE7SUFDRyxZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLGlCQUFpQjtDQUNwQjs7Q0FFQTtJQUNHLGdCQUFnQjtJQUNoQixpQkFBaUI7Q0FDcEI7O0NBRUE7SUFDRyxzQkFBc0I7Q0FDekI7O0NBRUE7SUFDRyxxQkFBcUI7SUFDckIsWUFBWTtJQUNaLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsa0JBQWtCO0NBQ3JCOztDQUVBOztJQUVHLHlCQUF5QjtDQUM1QiIsInNvdXJjZXNDb250ZW50IjpbIiNib2R5SW5wdXQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuXHJcbiNpbnB1dERhdGUge1xyXG4gICAgd2lkdGg6IDQwJTtcclxufVxyXG5cclxuI2lucHV0VGltZSB7XHJcbiAgICB3aWR0aDogNDAlO1xyXG59XHJcblxyXG5pbnB1dCB7XHJcblxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDNyZW07XHJcbiAgICBwYWRkaW5nOiAxLjVyZW0gMXJlbTtcclxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gfVxyXG5cclxuICNhZGQge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogLjYxNXJlbSAycmVtO1xyXG4gICAgZm9udC1zaXplOiAxLjVyZW07XHJcbiB9XHJcblxyXG4gI2JvZHlPdXRwdXQge1xyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gfVxyXG5cclxuICNib2R5T3V0cHV0IHRhYmxlIHtcclxuICAgIGJvcmRlci1zcGFjaW5nOiAzcmVtIDA7XHJcbiB9XHJcblxyXG4gI2JvZHlPdXRwdXQgdGFibGUgdGQgYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtyZWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiB9XHJcblxyXG4gI2JvZHlPdXRwdXQgdGFibGUgdGQgYnV0dG9uOmhvdmVyLFxyXG4gI2JvZHlPdXRwdXQgdGFibGUgdGQgYnV0dG9uOmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrcmVkO1xyXG4gfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,aAAa;EAKxBC,YACQC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAJnB,WAAM,GAAW,KAAK;IAEtB,gBAAW,GAAG,IAAI,CAACA,WAAW,CAACC,KAAK,EAAE;IAKtC,SAAI,GAAWC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;EAFhD;EAAC;qBAPOL,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAM;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCV1BC,+BAAsE;QAAtCA;UAAA,OAAYC,aAAS;QAAA,EAAC;QAClDD,2BAAkG;QAIlGA,iCAA+C;QAAAA,YAAY;QAAAA,iBAAS;QAGxEA,8BAAqB;QAITA,6BACJ;QAAAA,iBAAK;QACLA,2BAAI;QACAA,6BACJ;QAAAA,iBAAK;QACLA,2BAAI;QACAA,2BACJ;QAAAA,iBAAK;QACLA,2BAAI;QACsBA,kBAAC;QAAAA,iBAAS;;;QArBtCA,2CAAyB;QAKoBA,eAAY;QAAZA,gCAAY","names":["BodyComponent","constructor","formBuilder","group","document","getElementById","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\peter\\Desktop\\CODE\\Angular\\my-app\\src\\app\\components\\body\\body.component.ts","C:\\Users\\peter\\Desktop\\CODE\\Angular\\my-app\\src\\app\\components\\body\\body.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ObservedValueUnionFromArray } from 'rxjs';\nimport { FormBuilder } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css']\n})\nexport class BodyComponent implements OnInit, OnDestroy {\n\n  button: string = 'Add';\n\n  newTaskForm = this.formBuilder.group()\n  constructor(\n  private formBuilder: FormBuilder\n  ) {}\n\n  task: string = document.getElementById('inputText');\n\n}\n","<form [formGroup]=\"newTaskForm\" (ngSubmit)=\"addTask()\" id=\"bodyInput\">\n    <input formControlName=\"taskText\" id=\"inputText\" type=\"text\" value=\"\" placeholder=\"Add task here\">\n    <input formControlName=\"taskDate\" id=\"inputDate\" type=\"date\">\n    <input formControlName=\"taskTime\" id=\"inputTime\" type=\"time\" name=\"\">\n\n    <button id=\"add\" onclick=\"add()\" type=\"submit\">{{ button }}</button>\n</form>\n\n<div id=\"bodyOutput\">\n\n    <table>\n        <td>\n            Appointment\n        </td>\n        <td>\n            11/12/2022\n        </td>\n        <td>\n            08:00 AM\n        </td>\n        <td>\n            <button type=\"submit\">X</button>\n        </td>\n    </table>\n\n    <!-- <table>\n        <td *ngfor=\"let task of tasks\">\n            {{ task }}\n        </td>\n        <td *ngfor=\"let date of dates\">\n            {{ date }}\n        </td>\n        <td *ngfor=\"let time of times\">\n            {{ time }}\n        </td>\n        <td>\n            <button type=\"submit\">X</button>\n        </td>\n    </table> -->\n\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}