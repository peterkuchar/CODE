{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction BodyComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function BodyComponent_div_1_Template_div_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleDone(i_r2));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4);\n    i0.ɵɵtext(6, \"24/12/2022\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 5);\n    i0.ɵɵtext(8, \"08:00\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function BodyComponent_div_1_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteTask(i_r2));\n    });\n    i0.ɵɵtext(10, \"X\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵclassMapInterpolate1(\"task \", task_r1.completed ? \"done\" : \"\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.content);\n  }\n}\n// import { Input } from '@angular/core';\nexport class BodyComponent {\n  constructor() {\n    this.inputTask = \"\";\n  }\n  ngOnInit() {\n    this.tasks = [{\n      content: 'first',\n      // date: Date,\n      // time: Time,\n      completed: false\n    }, {\n      content: 'second',\n      completed: true\n    }];\n  }\n  toggleDone(id) {\n    this.tasks.map((v, i) => {\n      if (i == id) v.completed = !v.completed;\n      return v;\n    });\n  }\n  deleteTask(id) {\n    this.tasks = this.tasks.filter((v, i) => i !== id);\n  }\n  addTask() {\n    this.tasks.push({\n      content: this.inputTask,\n      completed: false\n    });\n  }\n  static #_ = this.ɵfac = function BodyComponent_Factory(t) {\n    return new (t || BodyComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BodyComponent,\n    selectors: [[\"app-body\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"id\", \"bodyOutput\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"id\"], [1, \"content\", 3, \"click\"], [1, \"date\"], [1, \"time\"], [1, \"delete\", 3, \"click\"]],\n    template: function BodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, BodyComponent_div_1_Template, 11, 5, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"#bodyOutput[_ngcontent-%COMP%] {\\r\\n    font-size: 1.25rem;\\r\\n    width: 90%;\\r\\n    margin: 0 auto;\\r\\n    margin-top: 2rem;\\r\\n }\\r\\n\\r\\n .task[_ngcontent-%COMP%] {\\r\\n   padding: 5px;\\r\\n   text-align: left;\\r\\n   display: grid;\\r\\n   grid-template-columns: .25fr 1fr 1fr 1fr .25fr;\\r\\n   gap: 25px;\\r\\n }\\r\\n\\r\\n .task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\r\\n   width: 20px;\\r\\n   height: 20px;\\r\\n   background-color: red;\\r\\n   color: white;\\r\\n   padding: 5px;\\r\\n   border: 1px solid darkred;\\r\\n   border-radius: 5px;\\r\\n   display: flex;\\r\\n   align-items: center;\\r\\n   justify-content: center;\\r\\n }\\r\\n\\r\\n .task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .task[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active {\\r\\n    background-color: darkred;\\r\\n }\\r\\n\\r\\n .task[_ngcontent-%COMP%]:nth-child(even) {\\r\\n  background-color: rgb(214, 214, 214);\\r\\n }\\r\\n\\r\\n .task.done[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%] {\\r\\n  text-decoration: line-through;\\r\\n }\\n/*# sourceURL=webpack://./src/app/components/body/body.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ib2R5L2JvZHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQztJQUNHLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsY0FBYztJQUNkLGdCQUFnQjtDQUNuQjs7Q0FFQTtHQUNFLFlBQVk7R0FDWixnQkFBZ0I7R0FDaEIsYUFBYTtHQUNiLDhDQUE4QztHQUM5QyxTQUFTO0NBQ1g7O0NBRUE7R0FDRSxXQUFXO0dBQ1gsWUFBWTtHQUNaLHFCQUFxQjtHQUNyQixZQUFZO0dBQ1osWUFBWTtHQUNaLHlCQUF5QjtHQUN6QixrQkFBa0I7R0FDbEIsYUFBYTtHQUNiLG1CQUFtQjtHQUNuQix1QkFBdUI7Q0FDekI7O0NBRUE7O0lBRUcseUJBQXlCO0NBQzVCOztDQUVBO0VBQ0Msb0NBQW9DO0NBQ3JDOztDQUVBO0VBQ0MsNkJBQTZCO0NBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiICNib2R5T3V0cHV0IHtcclxuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiB9XHJcblxyXG4gLnRhc2sge1xyXG4gICBwYWRkaW5nOiA1cHg7XHJcbiAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogLjI1ZnIgMWZyIDFmciAxZnIgLjI1ZnI7XHJcbiAgIGdhcDogMjVweDtcclxuIH1cclxuXHJcbiAudGFzayBidXR0b24ge1xyXG4gICB3aWR0aDogMjBweDtcclxuICAgaGVpZ2h0OiAyMHB4O1xyXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbiAgIGNvbG9yOiB3aGl0ZTtcclxuICAgcGFkZGluZzogNXB4O1xyXG4gICBib3JkZXI6IDFweCBzb2xpZCBkYXJrcmVkO1xyXG4gICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gfVxyXG5cclxuIC50YXNrIGJ1dHRvbjpob3ZlcixcclxuIC50YXNrIGJ1dHRvbjphY3RpdmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya3JlZDtcclxuIH1cclxuXHJcbiAudGFzazpudGgtY2hpbGQoZXZlbikge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTQsIDIxNCwgMjE0KTtcclxuIH1cclxuXHJcbiAudGFzay5kb25lIC5jb250ZW50IHtcclxuICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcclxuIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;IACIA,2BAAkG;IAC9EA,YAAO;IAAAA,iBAAM;IAC7BA,8BAA6C;IAAxBA;MAAA;MAAA;MAAA;MAAA,OAASA,sCAAa;IAAA,EAAC;IAACA,YAAkB;IAAAA,iBAAM;IACrEA,8BAAkB;IAAwBA,0BAAU;IAAAA,iBAAM;IAC1DA,8BAAkB;IAAwBA,qBAAK;IAAAA,iBAAM;IACrDA,iCAA+C;IAAxBA;MAAA;MAAA;MAAA;MAAA,OAASA,sCAAa;IAAA,EAAC;IAACA,kBAAC;IAAAA,iBAAS;;;;;IALbA,uEAAiD;IAC7EA,eAAO;IAAPA,0BAAO;IACsBA,eAAkB;IAAlBA,qCAAkB;;;ACAvE;AAQA,OAAM,MAAOC,aAAa;EAMxBC;IAFA,cAAS,GAAW,EAAE;EAEN;EAEhBC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,CACX;MACEC,OAAO,EAAE,OAAO;MAChB;MACA;MACAC,SAAS,EAAE;KACZ,EACD;MACED,OAAO,EAAE,QAAQ;MACjBC,SAAS,EAAE;KACZ,CACF;EACH;EAEAC,UAAU,CAACC,EAAU;IACnB,IAAI,CAACJ,KAAK,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;MACtB,IAAIA,CAAC,IAAIH,EAAE,EAAEE,CAAC,CAACJ,SAAS,GAAG,CAACI,CAAC,CAACJ,SAAS;MACvC,OAAOI,CAAC;IACV,CAAC,CAAC;EACJ;EAEAE,UAAU,CAACJ,EAAU;IACnB,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACA,KAAK,CAACS,MAAM,CAAC,CAACH,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,EAAE,CAAC;EACpD;EAEAM,OAAO;IACL,IAAI,CAACV,KAAK,CAACW,IAAI,CAAC;MACdV,OAAO,EAAE,IAAI,CAACW,SAAS;MACvBV,SAAS,EAAE;KACZ,CAAC;EACJ;EAAC;qBAvCUL,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDX1BrB,8BAAqB;QACjBA,+DAMM;QACVA,iBAAM;;;QAPoBA,eAAU;QAAVA,mCAAU","names":["i0","BodyComponent","constructor","ngOnInit","tasks","content","completed","toggleDone","id","map","v","i","deleteTask","filter","addTask","push","inputTask","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\peter\\Desktop\\CODE\\Angular\\my-app\\src\\app\\components\\body\\body.component.html","C:\\Users\\peter\\Desktop\\CODE\\Angular\\my-app\\src\\app\\components\\body\\body.component.ts"],"sourcesContent":["<div id=\"bodyOutput\">\n    <div *ngFor=\"let task of tasks; let i = index;\" class=\"task {{ (task.completed ? 'done' : '') }}\">\n        <div class=\"id\">{{ i }}</div>\n        <div class=\"content\" (click)=\"toggleDone(i)\">{{ task.content }}</div>\n        <div class=\"date\"><!-- {{ task.date }} -->24/12/2022</div>\n        <div class=\"time\"><!-- {{ task.time }} -->08:00</div>\n        <button class=\"delete\" (click)=\"deleteTask(i)\">X</button>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../../models/Task';\nimport { Time } from \"@angular/common\";\n// import { Input } from '@angular/core';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css']\n})\n\nexport class BodyComponent implements OnInit {\n\n  tasks!:Task[];\n\n  inputTask: string = \"\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.tasks = [\n      {\n        content: 'first',\n        // date: Date,\n        // time: Time,\n        completed: false\n      },\n      {\n        content: 'second',\n        completed: true\n      }\n    ]\n  }\n\n  toggleDone(id: number) {\n    this.tasks.map((v, i) => {\n      if (i == id) v.completed = !v.completed;\n      return v;\n    })\n  }\n\n  deleteTask(id: number) {\n    this.tasks = this.tasks.filter((v, i) => i !== id);\n  }\n\n  addTask() {\n    this.tasks.push({\n      content: this.inputTask,\n      completed: false\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}